{"version":3,"sources":["CreateAccount.js","ChangePassword.js","SaveTx.js","GetTx.js","App.js","serviceWorker.js","index.js"],"names":["createAccount","require","CreateAccountForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","account","address","error","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","_this2","preventDefault","then","console","log","catch","toString","_this$state","react_default","a","createElement","onSubmit","type","onChange","JSON","stringify","React","Component","changePassword","ChangePassword","oldPassword","newPassword","privateKey","parse","_this3","_this$state2","saveData","SaveTx","data","userId","password","result","userObj","userAddress","loginObject","privateKeyObj","getTransactionReceipt","App","config","web3Url","process","ownerAddress","keystoreObj","abi","contractAddress","bufferGasPrice","bufferGasLimit","setupConfig","className","CreateAccount","src_ChangePassword","src_SaveTx","GetTx","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abf13ee8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nconst { createAccount } = require('fmms');\n\nclass CreateAccountForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '', account: '', address: '', error: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { value } = this.state;\n    event.preventDefault();\n    createAccount(value)\n      .then(account => {\n        console.log(account);\n        this.setState({\n          account: account,\n          address: '0x' + account.address,\n          error: ''\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({ account: '', address: '', error: error.toString() });\n      });\n  }\n\n  render() {\n    const { account, error, address } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Password:\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        {account && (\n          <div>\n            <p>New Account Created: {address}</p>\n            <p>{JSON.stringify(account)}</p>\n          </div>\n        )}\n        {error && <p>{error}</p>}\n      </div>\n    );\n  }\n}\n\nexport default CreateAccountForm;\n","import React, { Component } from 'react';\nconst { changePassword } = require('fmms');\n\nclass ChangePassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      oldPassword: '',\n      newPassword: '',\n      privateKey: '',\n      account: '',\n      address: '',\n      error: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const { oldPassword, newPassword, privateKey } = this.state;\n    event.preventDefault();\n    changePassword(oldPassword, JSON.parse(privateKey), newPassword)\n      .then(account => {\n        console.log(account);\n        this.setState({\n          account: account,\n          address: '0x' + account.address,\n          error: ''\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({ account: '', address: '', error: error.toString() });\n      });\n  }\n\n  render() {\n    const { account, error, address } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>\n              Old Password:\n              <input\n                type=\"text\"\n                value={this.state.oldPassword}\n                onChange={event =>\n                  this.setState({ oldPassword: event.target.value })\n                }\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              PrivateKey:\n              <input\n                type=\"text\"\n                value={this.state.privateKey}\n                onChange={event =>\n                  this.setState({ privateKey: event.target.value })\n                }\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              New Password:\n              <input\n                type=\"text\"\n                value={this.state.newPassword}\n                onChange={event =>\n                  this.setState({ newPassword: event.target.value })\n                }\n              />\n            </label>\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        {account && (\n          <div>\n            <p>Password Changed: {address}</p>\n            <p>{JSON.stringify(account)}</p>\n          </div>\n        )}\n        {error && <p>{error}</p>}\n      </div>\n    );\n  }\n}\n\nexport default ChangePassword;\n","import React, { Component } from 'react';\nconst { saveData } = require('fmms');\n\nclass SaveTx extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: '',\n      type: '',\n      userId: '',\n      address: '',\n      password: '',\n      privateKey: '',\n      result: '',\n      error: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const { data, type, userId, address, password, privateKey } = this.state;\n    event.preventDefault();\n    try {\n      const userObj = {\n        userId: userId,\n        userAddress: address\n      };\n      const loginObject = {\n        password,\n        privateKeyObj: JSON.parse(privateKey)\n      };\n      saveData(JSON.parse(data), type, userObj, loginObject)\n        .then(result => {\n          console.log(result);\n          this.setState({\n            result: result,\n            error: ''\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ result: '', error: error.toString() });\n        });\n    } catch (error) {\n      console.log(error);\n      this.setState({ result: '', error: error.toString() });\n    }\n  }\n\n  render() {\n    const { result, error, address } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>\n              Data JSON:\n              <textarea\n                type=\"text\"\n                value={this.state.data}\n                onChange={event => this.setState({ data: event.target.value })}\n              ></textarea>\n            </label>\n          </div>\n          <div>\n            <label>\n              Data Type (int):\n              <input\n                type=\"text\"\n                value={this.state.type}\n                onChange={event => this.setState({ type: event.target.value })}\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              User Id:\n              <input\n                type=\"text\"\n                value={this.state.userId}\n                onChange={event =>\n                  this.setState({ userId: event.target.value })\n                }\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              User Address:\n              <input\n                type=\"text\"\n                value={this.state.address}\n                onChange={event =>\n                  this.setState({ address: event.target.value })\n                }\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Modifier Password:\n              <input\n                type=\"text\"\n                value={this.state.password}\n                onChange={event =>\n                  this.setState({ password: event.target.value })\n                }\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Modifier PrivateKey:\n              <input\n                type=\"text\"\n                value={this.state.privateKey}\n                onChange={event =>\n                  this.setState({ privateKey: event.target.value })\n                }\n              />\n            </label>\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        {result && (\n          <div>\n            <p>Tx submitted to network</p>\n            <p>{result}</p>\n          </div>\n        )}\n        {error && <p>{error}</p>}\n      </div>\n    );\n  }\n}\n\nexport default SaveTx;\n","import React, { Component } from 'react';\nconst { getTransactionReceipt } = require('fmms');\n\nclass CreateAccountForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '', result: '', address: '', error: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { value } = this.state;\n    event.preventDefault();\n    getTransactionReceipt(value)\n      .then(result => {\n        console.log(result);\n        this.setState({\n          result: result,\n          error: ''\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({ account: '', address: '', error: error.toString() });\n      });\n  }\n\n  render() {\n    const { result, error } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Tx:\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <div>\n          <p>Receipt : </p>\n          <p>{JSON.stringify(result)}</p>\n        </div>\n        {error && <p>{error}</p>}\n      </div>\n    );\n  }\n}\n\nexport default CreateAccountForm;\n","// require('dotenv').config();\nimport React, { Component } from 'react';\nimport './App.css';\nimport CreateAccount from './CreateAccount';\nimport ChangePassword from './ChangePassword';\nimport SaveTx from './SaveTx';\nimport GetTx from './GetTx';\n// const { init: setupConfig } = require('fmms');\nimport { init as setupConfig } from 'fmms';\n// UTC--2018-09-13T14_45_06.629Z--633642c036db81fb7a726a37a8b42254556b56f0\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const config = {\n      web3Url: process.env.REACT_APP_WEB3URL,\n      ownerAddress: process.env.REACT_APP_OWNER,\n      keystoreObj: require('./keystore/keystore.json'),\n      abi: require('./fmms_abi/ropsten-abi.json'),\n      password: process.env.REACT_APP_OWNER_PASSWORD,\n      contractAddress: process.env.REACT_APP_CONTRACT_ADDRESS,\n      bufferGasPrice: 0, // gwei\n      bufferGasLimit: 200000 // wei\n    };\n    console.log(config);\n    setupConfig(config);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <ul>\n            <li>\n              <h3>Create Account</h3>\n              <CreateAccount />\n            </li>\n            <li>\n              <h3>Change Password</h3>\n              <ChangePassword />\n            </li>\n            <li>\n              <h3>Save Transaction</h3>\n              <SaveTx />\n            </li>\n            <li>\n              <h3>Get TransactionReceipt</h3>\n              <GetTx />\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// require('dotenv').config();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}